queries:
  - name: get_current_time
    sql: "SELECT NOW() as current_time"
    description: "Get the current timestamp"

  - name: get_version
    sql: "SELECT version() as pg_version"
    description: "Get PostgreSQL version"

  - name: test_json_query
    sql: "SELECT ${test_data}::jsonb as test_data"
    description: "Test query with JSON parameter"

  - name: create_users_table
    sql: "CREATE TABLE IF NOT EXISTS users (id SERIAL PRIMARY KEY, name TEXT NOT NULL, email TEXT UNIQUE NOT NULL, age INTEGER, profile JSONB, created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(), updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW())"
    description: "Create the users table with all necessary fields"

  - name: insert_user
    sql: |
      INSERT INTO users (name, email, age, profile)
      VALUES (${name}, ${email}, ${age}, ${profile})
      RETURNING id, name, email, age, created_at
    description: "Insert a new user with all fields and return the created user"

  - name: get_all_users
    sql: "SELECT id, name, email, age, profile, created_at, updated_at FROM users ORDER BY created_at DESC"
    description: "Get all users with all their fields"

  - name: find_user_by_email
    sql: "SELECT id, name, email, age, profile, created_at, updated_at FROM users WHERE email = ${email}"
    description: "Find a user by their email address"

  - name: update_user_profile
    sql: "UPDATE users SET profile = ${profile}, updated_at = NOW() WHERE id = ${user_id} RETURNING id, name, email, age, profile, updated_at"
    description: "Update a user's profile by their ID"

# Field-specific type mappings for JSON/JSONB fields
# This demonstrates how you would map specific fields to custom Rust types
# Schema names can be included: "schema.table.field" or just "table.field"
types:
  "test.test_data": "crate::models::TestData"
  "users.profile": "crate::models::UserProfile"
